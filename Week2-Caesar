//Caesar cipher that accepts a single numeric command line argument

#include <stdio.h>
#include <cs50.h>
#include <ctype.h>
#include <string.h>
#include <stdlib.h>

int main(int argc, string argv[])
{
    //Verifies two command line arguments
    if (argc != 2)
    {
        printf("Usage: ./caesar key\n");
        return 1;
    }

    //Stores length of user input and verifies is numeric
    int largv = strlen(argv[1]);
    for (int i = 0; i < largv; i++)
    {
        if (isdigit(argv[1][i]) == 0)
        {
            printf("Usage: ./caesar key,\n");
            return 1;
        }
    }

    //Converts valid input to int, prompts user for plaintext
    int k = atoi(argv[1]);
    //printf("key: %i\n", k);

    string pt = get_string("plaintext: ");
    int lpt = strlen(pt);
    char ct[lpt];
    printf("ciphertext: ");
    for (int i = 0; i < lpt; i++)
    {
        if (isupper(pt[i]))
        {
            printf("%c", (((pt[i] + k) - 65) % 26) + 65);
        }
        else if (islower(pt[i]))
        {
            printf("%c", (((pt[i] + k) - 97) % 26) + 97);
        }
        else
        {
            printf("%c", pt[i]);
        }
        //ct[i] = (ct[i] + k) % 26;
    }
    printf("\n");
    return 0;
}
